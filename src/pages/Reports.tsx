import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';
import { Calendar } from '@/components/ui/calendar';
import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
import { ArrowLeft, Download, Share, Eye, FileText, Calendar as CalendarIcon, BarChart3, Loader2 } from 'lucide-react';
import { cn } from '@/lib/utils';
import { toast } from '@/hooks/use-toast';
import apiService from '@/services/api';

const Reports = () => {
  const navigate = useNavigate();
  const [showWeeklyModal, setShowWeeklyModal] = useState(false);
  const [showMonthlyModal, setShowMonthlyModal] = useState(false);
  const [showCustomModal, setShowCustomModal] = useState(false);
  const [customDateFrom, setCustomDateFrom] = useState<Date>();
  const [customDateTo, setCustomDateTo] = useState<Date>();
  const [selectedReport, setSelectedReport] = useState<any>(null);
  const [showReportModal, setShowReportModal] = useState(false);
  const [loading, setLoading] = useState(true);
  const [monthlyStats, setMonthlyStats] = useState({});
  const [recentReports, setRecentReports] = useState([
    {
      id: 1,
      patientName: "Rajesh Kumar",
      condition: "Fungal Infection",
      date: "2024-01-15",
      status: "Completed",
      type: "Diagnostic"
    },
    {
      id: 2,
      patientName: "Priya Sharma",
      condition: "Contact Dermatitis",
      date: "2024-01-14",
      status: "Under Review",
      type: "Diagnostic"
    }
  ]);

  useEffect(() => {
    loadMonthlyStats();
  }, []);

  // Simple date formatter
  const formatDate = (date: Date) => {
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const loadMonthlyStats = async () => {
    try {
      const response = await apiService.getMonthlyStats();
      if (response.success) {
        setMonthlyStats(response.stats);
      }
    } catch (error) {
      console.error('Failed to load monthly stats:', error);
    } finally {
      setLoading(false);
    }
  };

  const generateCustomReport = () => {
    toast({
      title: "Custom Report Generated",
      description: "Your custom report has been generated successfully.",
    });
    setShowCustomModal(false);
  };

  const handleViewReport = (report: any) => {
    setSelectedReport(report);
    setShowReportModal(true);
  };

  const handleDownloadReport = (report: any) => {
    toast({
      title: "Download Started",
      description: `Downloading report for ${report.patientName}`,
    });
  };

  const handleShareReport = (report: any) => {
    const shareText = `Medical Report - ${report.patientName}\nCondition: ${report.condition}\nDate: ${report.date}\nStatus: ${report.status}\nReport ID: RPT-${report.id.toString().padStart(4, '0')}`;
    
    if (navigator.share) {
      navigator.share({
        title: `Medical Report - ${report.patientName}`,
        text: shareText,
      }).catch(console.error);
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(shareText).then(() => {
        alert('Report details copied to clipboard!');
      }).catch(() => {
        alert('Unable to share. Please copy the report details manually.');
      });
    }
  };

  // Export & Share functionality
  const handleExportPDF = () => {
    const summaryData = `
RURAL HEALTH AI AID - MONTHLY SUMMARY REPORT
============================================

Report Generated: ${new Date().toLocaleDateString()}

STATISTICS:
- Total Reports: 45
- Diagnostic Reports: 38
- Referral Reports: 7
- Completed Cases: 35

PERFORMANCE METRICS:
- Diagnostic Accuracy: 94%
- Average Cases per Day: 2.3
- Follow-up Completion: 85%

RECENT CASES:
${recentReports.map(report => 
  `- ${report.patientName}: ${report.condition} (${report.status})`
).join('\n')}

TOP CONDITIONS THIS MONTH:
- Fungal Infections: 15 cases
- Contact Dermatitis: 10 cases
- Bacterial Infections: 8 cases

Generated by Rural Health AI Aid System
    `;

    // Create PDF-like content as HTML and trigger print
    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>Rural Health AI Aid - Monthly Report</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
              h1 { color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 10px; }
              h2 { color: #1f2937; margin-top: 30px; }
              .stats { display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px; margin: 20px 0; }
              .stat-item { background: #f3f4f6; padding: 15px; border-radius: 8px; }
              .stat-value { font-size: 24px; font-weight: bold; color: #2563eb; }
              pre { background: #f9fafb; padding: 15px; border-radius: 8px; white-space: pre-wrap; }
              @media print { body { margin: 0; } }
            </style>
          </head>
          <body>
            <h1>Rural Health AI Aid - Monthly Summary Report</h1>
            <p><strong>Report Generated:</strong> ${new Date().toLocaleDateString()}</p>
            
            <h2>Statistics</h2>
            <div class="stats">
              <div class="stat-item">
                <div class="stat-value">45</div>
                <div>Total Reports</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">38</div>
                <div>Diagnostic Reports</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">7</div>
                <div>Referral Reports</div>
              </div>
              <div class="stat-item">
                <div class="stat-value">35</div>
                <div>Completed Cases</div>
              </div>
            </div>

            <h2>Performance Metrics</h2>
            <ul>
              <li>Diagnostic Accuracy: <strong>94%</strong></li>
              <li>Average Cases per Day: <strong>2.3</strong></li>
              <li>Follow-up Completion: <strong>85%</strong></li>
            </ul>

            <h2>Recent Cases</h2>
            <ul>
              ${recentReports.map(report => 
                `<li>${report.patientName}: ${report.condition} (${report.status})</li>`
              ).join('')}
            </ul>

            <h2>Top Conditions This Month</h2>
            <ul>
              <li>Fungal Infections: 15 cases</li>
              <li>Contact Dermatitis: 10 cases</li>
              <li>Bacterial Infections: 8 cases</li>
            </ul>

            <p><em>Generated by Rural Health AI Aid System</em></p>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.focus();
      setTimeout(() => {
        printWindow.print();
      }, 250);
    }
  };

  const handleExportExcel = () => {
    // Create CSV content (Excel-compatible)
    const csvContent = [
      ['Rural Health AI Aid - Monthly Report'],
      ['Generated:', new Date().toLocaleDateString()],
      [''],
      ['Statistics'],
      ['Metric', 'Value'],
      ['Total Reports', '45'],
      ['Diagnostic Reports', '38'],
      ['Referral Reports', '7'],
      ['Completed Cases', '35'],
      [''],
      ['Recent Cases'],
      ['Patient Name', 'Condition', 'Date', 'Status', 'Type'],
      ...recentReports.map(report => [
        report.patientName,
        report.condition,
        report.date,
        report.status,
        report.type
      ]),
      [''],
      ['Performance Metrics'],
      ['Diagnostic Accuracy', '94%'],
      ['Average Cases per Day', '2.3'],
      ['Follow-up Completion', '85%'],
      [''],
      ['Top Conditions'],
      ['Condition', 'Cases'],
      ['Fungal Infections', '15'],
      ['Contact Dermatitis', '10'],
      ['Bacterial Infections', '8']
    ];

    const csvString = csvContent.map(row => 
      row.map(cell => `"${cell}"`).join(',')
    ).join('\n');

    const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `Rural_Health_Report_${new Date().toISOString().split('T')[0]}.csv`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  const handleShareWhatsApp = () => {
    const message = `🏥 *Rural Health AI Aid - Monthly Summary*

📊 *Statistics:*
• Total Reports: 45
• Diagnostic Reports: 38
• Referral Reports: 7
• Completed Cases: 35

📈 *Performance:*
• Diagnostic Accuracy: 94%
• Avg Cases/Day: 2.3
• Follow-up Rate: 85%

🔝 *Top Conditions:*
• Fungal Infections: 15 cases
• Contact Dermatitis: 10 cases
• Bacterial Infections: 8 cases

Generated: ${new Date().toLocaleDateString()}`;

    const encodedMessage = encodeURIComponent(message);
    const whatsappUrl = `https://wa.me/?text=${encodedMessage}`;
    
    // Try to open WhatsApp, fallback to copying message
    try {
      window.open(whatsappUrl, '_blank');
    } catch (error) {
      navigator.clipboard.writeText(message).then(() => {
        alert('Report summary copied to clipboard! You can paste it in WhatsApp.');
      }).catch(() => {
        alert('Unable to share via WhatsApp. Please copy the summary manually.');
      });
    }
  };

  const handlePrintSummary = () => {
    const printContent = `
RURAL HEALTH AI AID - SUMMARY REPORT
===================================

Generated: ${new Date().toLocaleDateString()}

MONTHLY STATISTICS:
• Total Reports: 45
• Diagnostic Reports: 38  
• Referral Reports: 7
• Completed Cases: 35

PERFORMANCE METRICS:
• Diagnostic Accuracy: 94%
• Average Cases per Day: 2.3
• Follow-up Completion: 85%

RECENT CASES:
${recentReports.map((report, index) => 
  `${index + 1}. ${report.patientName} - ${report.condition} (${report.status})`
).join('\n')}

TOP CONDITIONS THIS MONTH:
• Fungal Infections: 15 cases
• Contact Dermatitis: 10 cases  
• Bacterial Infections: 8 cases

---
Rural Health AI Aid System
    `;

    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>Rural Health AI Aid - Summary</title>
            <style>
              body { 
                font-family: 'Courier New', monospace; 
                margin: 20px; 
                line-height: 1.4;
                font-size: 12px;
              }
              @media print { 
                body { margin: 10px; font-size: 11px; }
                @page { margin: 0.5in; }
              }
            </style>
          </head>
          <body>
            <pre>${printContent}</pre>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.focus();
      setTimeout(() => {
        printWindow.print();
      }, 250);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 flex items-center justify-center">
        <Card className="p-8">
          <div className="flex items-center space-x-4">
            <Loader2 className="h-8 w-8 animate-spin text-blue-600" />
            <div>
              <h3 className="text-lg font-semibold">Loading Reports...</h3>
              <p className="text-gray-600">Fetching report data from server</p>
            </div>
          </div>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <Button
                variant="ghost"
                size="sm"
                onClick={() => navigate('/')}
                className="mr-2 sm:mr-4"
              >
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <h1 className="text-lg sm:text-xl font-semibold text-gray-900">Reports & Analytics</h1>
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-8">
        {/* Monthly Statistics */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3 sm:gap-6 mb-6 sm:mb-8">
          <Card className="bg-white shadow-sm">
            <CardContent className="p-3 sm:p-6 text-center">
              <FileText className="h-6 w-6 sm:h-8 sm:w-8 text-blue-600 mx-auto mb-2" />
              <div className="text-xl sm:text-3xl font-bold text-gray-900">45</div>
              <div className="text-xs sm:text-sm text-gray-600">Total Reports</div>
            </CardContent>
          </Card>
          <Card className="bg-white shadow-sm">
            <CardContent className="p-3 sm:p-6 text-center">
              <div className="text-xl sm:text-3xl font-bold text-green-600">38</div>
              <div className="text-xs sm:text-sm text-gray-600">Diagnostic Reports</div>
            </CardContent>
          </Card>
          <Card className="bg-white shadow-sm">
            <CardContent className="p-3 sm:p-6 text-center">
              <div className="text-xl sm:text-3xl font-bold text-yellow-600">7</div>
              <div className="text-xs sm:text-sm text-gray-600">Referral Reports</div>
            </CardContent>
          </Card>
          <Card className="bg-white shadow-sm">
            <CardContent className="p-3 sm:p-6 text-center">
              <div className="text-xl sm:text-3xl font-bold text-purple-600">35</div>
              <div className="text-xs sm:text-sm text-gray-600">Completed Cases</div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Actions */}
        <Card className="bg-white shadow-sm mb-6 sm:mb-8">
          <CardHeader className="p-4 sm:p-6">
            <CardTitle className="text-lg sm:text-2xl">Quick Actions</CardTitle>
            <CardDescription className="text-sm sm:text-base">Generate and manage your reports</CardDescription>
          </CardHeader>
          <CardContent className="p-4 sm:p-6 pt-0">
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
              <Button 
                onClick={() => setShowWeeklyModal(true)}
                className="bg-blue-600 hover:bg-blue-700"
              >
                <CalendarIcon className="h-4 w-4 mr-2" />
                Weekly Summary
              </Button>
              <Button 
                onClick={() => setShowMonthlyModal(true)}
                className="bg-green-600 hover:bg-green-700"
              >
                <BarChart3 className="h-4 w-4 mr-2" />
                Monthly Analytics
              </Button>
              <Button 
                onClick={() => setShowCustomModal(true)}
                className="bg-purple-600 hover:bg-purple-700"
              >
                <FileText className="h-4 w-4 mr-2" />
                Custom Report
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Recent Reports */}
        <Card className="bg-white shadow-sm mb-6 sm:mb-8">
          <CardHeader className="p-4 sm:p-6">
            <CardTitle className="text-lg sm:text-2xl">Recent Reports</CardTitle>
            <CardDescription className="text-sm sm:text-base">View and manage your latest diagnostic reports</CardDescription>
          </CardHeader>
          <CardContent className="p-4 sm:p-6 pt-0">
            <div className="space-y-4">
              {recentReports.map((report) => (
                <div key={report.id} className="border rounded-lg p-4">
                  <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
                    <div className="flex-1">
                      <div className="flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-3 mb-2">
                        <h3 className="font-semibold text-gray-900 text-sm sm:text-base">{report.patientName}</h3>
                        <div className="flex flex-wrap gap-2">
                          <Badge className={
                            report.status === 'Completed' ? 'bg-green-100 text-green-800' :
                            report.status === 'Under Review' ? 'bg-yellow-100 text-yellow-800' :
                            report.status === 'Referred' ? 'bg-blue-100 text-blue-800' :
                            'bg-gray-100 text-gray-800'
                          }>
                            {report.status}
                          </Badge>
                          <Badge variant="outline" className="text-xs">{report.type}</Badge>
                        </div>
                      </div>
                      
                      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2 text-xs sm:text-sm text-gray-600">
                        <div>
                          <span className="font-medium">Condition:</span> {report.condition}
                        </div>
                        <div>
                          <span className="font-medium">Date:</span> {report.date}
                        </div>
                        <div>
                          <span className="font-medium">Report ID:</span> RPT-{report.id.toString().padStart(4, '0')}
                        </div>
                      </div>
                    </div>
                    
                    <div className="flex flex-row sm:flex-col lg:flex-row space-x-2 sm:space-x-0 sm:space-y-2 lg:space-y-0 lg:space-x-2 pt-2 sm:pt-0">
                      <Button 
                        variant="outline" 
                        size="sm" 
                        className="flex-1 sm:flex-none text-xs"
                        onClick={() => handleViewReport(report)}
                      >
                        <Eye className="h-3 w-3 sm:h-4 sm:w-4 mr-1" />
                        View
                      </Button>
                      <Button 
                        variant="outline" 
                        size="sm" 
                        className="flex-1 sm:flex-none text-xs"
                        onClick={() => handleDownloadReport(report)}
                      >
                        <Download className="h-3 w-3 sm:h-4 sm:w-4 mr-1" />
                        Download
                      </Button>
                      <Button 
                        variant="outline" 
                        size="sm" 
                        className="flex-1 sm:flex-none text-xs"
                        onClick={() => handleShareReport(report)}
                      >
                        <Share className="h-3 w-3 sm:h-4 sm:w-4 mr-1" />
                        Share
                      </Button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Performance Insights */}
        <Card className="bg-gradient-to-r from-blue-50 to-green-50 mb-6 sm:mb-8">
          <CardHeader className="p-4 sm:p-6">
            <CardTitle className="text-blue-900 text-lg sm:text-2xl">This Month's Performance</CardTitle>
          </CardHeader>
          <CardContent className="p-4 sm:p-6 pt-0">
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 sm:gap-6">
              <div className="text-center">
                <div className="text-2xl sm:text-3xl font-bold text-blue-600 mb-2">94%</div>
                <div className="text-xs sm:text-sm text-blue-800">Diagnostic Accuracy</div>
                <div className="text-xs text-blue-600 mt-1">+2% from last month</div>
              </div>
              <div className="text-center">
                <div className="text-2xl sm:text-3xl font-bold text-green-600 mb-2">2.3</div>
                <div className="text-xs sm:text-sm text-green-800">Avg. Cases per Day</div>
                <div className="text-xs text-green-600 mt-1">+0.5 from last month</div>
              </div>
              <div className="text-center">
                <div className="text-2xl sm:text-3xl font-bold text-purple-600 mb-2">85%</div>
                <div className="text-xs sm:text-sm text-purple-800">Follow-up Completion</div>
                <div className="text-xs text-purple-600 mt-1">+10% from last month</div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Export Options */}
        <Card className="bg-white shadow-sm">
          <CardHeader className="p-4 sm:p-6">
            <CardTitle className="text-lg sm:text-2xl">Export & Share</CardTitle>
            <CardDescription className="text-sm sm:text-base">Download reports in different formats for sharing with supervisors</CardDescription>
          </CardHeader>
          <CardContent className="p-4 sm:p-6 pt-0">
            <div className="grid grid-cols-2 sm:flex sm:flex-wrap gap-2 sm:gap-4">
              <Button 
                variant="outline" 
                className="text-xs sm:text-sm"
                onClick={handleExportPDF}
              >
                <Download className="h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2" />
                <span className="hidden sm:inline">Export as </span>PDF
              </Button>
              <Button 
                variant="outline" 
                className="text-xs sm:text-sm"
                onClick={handleExportExcel}
              >
                <Download className="h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2" />
                <span className="hidden sm:inline">Export as </span>Excel
              </Button>
              <Button 
                variant="outline" 
                className="text-xs sm:text-sm"
                onClick={handleShareWhatsApp}
              >
                <Share className="h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2" />
                <span className="hidden sm:inline">Share via </span>WhatsApp
              </Button>
              <Button 
                variant="outline" 
                className="text-xs sm:text-sm"
                onClick={handlePrintSummary}
              >
                <FileText className="h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2" />
                <span className="hidden sm:inline">Print </span>Summary
              </Button>
            </div>
          </CardContent>
        </Card>
      </main>

      {/* Weekly Summary Modal */}
      <Dialog open={showWeeklyModal} onOpenChange={setShowWeeklyModal}>
        <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <CalendarIcon className="h-5 w-5 text-blue-600" />
              Weekly Summary Report
            </DialogTitle>
            <DialogDescription>
              Summary of activities and cases for the current week
            </DialogDescription>
          </DialogHeader>
          <div className="space-y-4">
            <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
              <div className="text-center p-3 bg-blue-50 rounded-lg">
                <div className="text-2xl font-bold text-blue-600">12</div>
                <div className="text-sm text-blue-800">New Cases</div>
              </div>
              <div className="text-center p-3 bg-green-50 rounded-lg">
                <div className="text-2xl font-bold text-green-600">8</div>
                <div className="text-sm text-green-800">Completed</div>
              </div>
              <div className="text-center p-3 bg-yellow-50 rounded-lg">
                <div className="text-2xl font-bold text-yellow-600">3</div>
                <div className="text-sm text-yellow-800">Pending</div>
              </div>
              <div className="text-center p-3 bg-purple-50 rounded-lg">
                <div className="text-2xl font-bold text-purple-600">1</div>
                <div className="text-sm text-purple-800">Referred</div>
              </div>
            </div>
            <div className="border-t pt-4">
              <h3 className="font-semibold mb-2">Most Common Conditions</h3>
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span>Fungal Infections</span>
                  <span className="font-medium">5 cases</span>
                </div>
                <div className="flex justify-between">
                  <span>Skin Rashes</span>
                  <span className="font-medium">4 cases</span>
                </div>
                <div className="flex justify-between">
                  <span>Minor Cuts</span>
                  <span className="font-medium">3 cases</span>
                </div>
              </div>
            </div>
            <div className="flex gap-2 pt-4">
              <Button className="flex-1">
                <Download className="h-4 w-4 mr-2" />
                Download PDF
              </Button>
              <Button variant="outline" className="flex-1">
                <Share className="h-4 w-4 mr-2" />
                Share
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* Monthly Analytics Modal */}
      <Dialog open={showMonthlyModal} onOpenChange={setShowMonthlyModal}>
        <DialogContent className="max-w-3xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <BarChart3 className="h-5 w-5 text-green-600" />
              Monthly Analytics Report
            </DialogTitle>
            <DialogDescription>
              Detailed analytics and insights for the current month
            </DialogDescription>
          </DialogHeader>
          <div className="space-y-6">
            <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <div className="text-3xl font-bold text-blue-600">45</div>
                <div className="text-sm text-blue-800">Total Cases</div>
                <div className="text-xs text-blue-600 mt-1">+15% vs last month</div>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <div className="text-3xl font-bold text-green-600">35</div>
                <div className="text-sm text-green-800">Completed</div>
                <div className="text-xs text-green-600 mt-1">78% success rate</div>
              </div>
              <div className="text-center p-4 bg-yellow-50 rounded-lg">
                <div className="text-3xl font-bold text-yellow-600">7</div>
                <div className="text-sm text-yellow-800">Pending</div>
                <div className="text-xs text-yellow-600 mt-1">15% of total</div>
              </div>
              <div className="text-center p-4 bg-purple-50 rounded-lg">
                <div className="text-3xl font-bold text-purple-600">3</div>
                <div className="text-sm text-purple-800">Referred</div>
                <div className="text-xs text-purple-600 mt-1">7% referral rate</div>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="border rounded-lg p-4">
                <h3 className="font-semibold mb-3">Top Conditions This Month</h3>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between items-center">
                    <span>Fungal Infections</span>
                    <div className="flex items-center gap-2">
                      <div className="w-16 bg-gray-200 rounded-full h-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{width: '60%'}}></div>
                      </div>
                      <span className="font-medium">15</span>
                    </div>
                  </div>
                  <div className="flex justify-between items-center">
                    <span>Contact Dermatitis</span>
                    <div className="flex items-center gap-2">
                      <div className="w-16 bg-gray-200 rounded-full h-2">
                        <div className="bg-green-600 h-2 rounded-full" style={{width: '40%'}}></div>
                      </div>
                      <span className="font-medium">10</span>
                    </div>
                  </div>
                  <div className="flex justify-between items-center">
                    <span>Bacterial Infections</span>
                    <div className="flex items-center gap-2">
                      <div className="w-16 bg-gray-200 rounded-full h-2">
                        <div className="bg-yellow-600 h-2 rounded-full" style={{width: '30%'}}></div>
                      </div>
                      <span className="font-medium">8</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="border rounded-lg p-4">
                <h3 className="font-semibold mb-3">Performance Trends</h3>
                <div className="space-y-3 text-sm">
                  <div className="flex justify-between">
                    <span>Average Cases/Day</span>
                    <span className="font-medium text-green-600">2.3 ↑</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Diagnostic Accuracy</span>
                    <span className="font-medium text-green-600">94% ↑</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Follow-up Rate</span>
                    <span className="font-medium text-green-600">85% ↑</span>
                  </div>
                  <div className="flex justify-between">
                    <span>Avg. Resolution Time</span>
                    <span className="font-medium text-blue-600">3.2 days</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="flex gap-2">
              <Button className="flex-1">
                <Download className="h-4 w-4 mr-2" />
                Download Full Report
              </Button>
              <Button variant="outline" className="flex-1">
                <Share className="h-4 w-4 mr-2" />
                Share Analytics
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* Custom Report Modal */}
      <Dialog open={showCustomModal} onOpenChange={setShowCustomModal}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <FileText className="h-5 w-5 text-purple-600" />
              Custom Report
            </DialogTitle>
            <DialogDescription>
              Select a date range to generate a custom report
            </DialogDescription>
          </DialogHeader>
          <div className="space-y-4">
            <div className="space-y-2">
              <label className="text-sm font-medium">From Date</label>
              <Popover>
                <PopoverTrigger asChild>
                  <Button
                    variant="outline"
                    className={cn(
                      "w-full justify-start text-left font-normal",
                      !customDateFrom && "text-muted-foreground"
                    )}
                  >
                    <CalendarIcon className="mr-2 h-4 w-4" />
                    {customDateFrom ? formatDate(customDateFrom) : "Pick a date"}
                  </Button>
                </PopoverTrigger>
                <PopoverContent className="w-auto p-0" align="start">
                  <Calendar
                    mode="single"
                    selected={customDateFrom}
                    onSelect={setCustomDateFrom}
                    initialFocus
                  />
                </PopoverContent>
              </Popover>
            </div>
            
            <div className="space-y-2">
              <label className="text-sm font-medium">To Date</label>
              <Popover>
                <PopoverTrigger asChild>
                  <Button
                    variant="outline"
                    className={cn(
                      "w-full justify-start text-left font-normal",
                      !customDateTo && "text-muted-foreground"
                    )}
                  >
                    <CalendarIcon className="mr-2 h-4 w-4" />
                    {customDateTo ? formatDate(customDateTo) : "Pick a date"}
                  </Button>
                </PopoverTrigger>
                <PopoverContent className="w-auto p-0" align="start">
                  <Calendar
                    mode="single"
                    selected={customDateTo}
                    onSelect={setCustomDateTo}
                    initialFocus
                  />
                </PopoverContent>
              </Popover>
            </div>
            
            <div className="flex gap-2 pt-4">
              <Button 
                onClick={generateCustomReport}
                disabled={!customDateFrom || !customDateTo}
                className="flex-1"
              >
                Generate Report
              </Button>
              <Button 
                variant="outline" 
                onClick={() => setShowCustomModal(false)}
                className="flex-1"
              >
                Cancel
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* Report View Modal */}
      {showReportModal && selectedReport && (
        <Dialog open={showReportModal} onOpenChange={setShowReportModal}>
          <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
            <DialogHeader>
              <DialogTitle className="flex items-center gap-2">
                <FileText className="h-5 w-5 text-blue-600" />
                Medical Report - {selectedReport.patientName}
              </DialogTitle>
              <DialogDescription>
                Detailed report for {selectedReport.condition}
              </DialogDescription>
            </DialogHeader>
            <div className="space-y-4">
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">
                <div>
                  <span className="font-medium">Patient Name:</span> {selectedReport.patientName}
                </div>
                <div>
                  <span className="font-medium">Report ID:</span> RPT-{selectedReport.id.toString().padStart(4, '0')}
                </div>
                <div>
                  <span className="font-medium">Date:</span> {selectedReport.date}
                </div>
                <div>
                  <span className="font-medium">Status:</span> 
                  <Badge className={`ml-2 ${
                    selectedReport.status === 'Completed' ? 'bg-green-100 text-green-800' :
                    selectedReport.status === 'Under Review' ? 'bg-yellow-100 text-yellow-800' :
                    selectedReport.status === 'Referred' ? 'bg-blue-100 text-blue-800' :
                    'bg-gray-100 text-gray-800'
                  }`}>
                    {selectedReport.status}
                  </Badge>
                </div>
                <div className="sm:col-span-2">
                  <span className="font-medium">Report Type:</span> {selectedReport.type}
                </div>
              </div>
              
              <div className="border-t pt-4">
                <h3 className="font-medium mb-2">Diagnosis</h3>
                <p className="text-sm text-gray-600 bg-gray-50 p-3 rounded">
                  <strong>Condition:</strong> {selectedReport.condition}
                  <br /><br />
                  Based on the examination and symptoms presented, the patient shows signs of {selectedReport.condition.toLowerCase()}. 
                  The condition appears to be {selectedReport.status === 'Completed' ? 'successfully treated' : 'under active management'}.
                </p>
              </div>
              
              <div className="border-t pt-4">
                <h3 className="font-medium mb-2">Treatment Recommendations</h3>
                <div className="text-sm text-gray-600 space-y-2">
                  <p>• Follow prescribed medication regimen as directed</p>
                  <p>• Schedule regular follow-up visits for monitoring</p>
                  <p>• Maintain proper hygiene and wound care if applicable</p>
                  <p>• Avoid known allergens and irritants</p>
                  <p>• Return immediately if symptoms worsen</p>
                </div>
              </div>
              
              <div className="border-t pt-4">
                <h3 className="font-medium mb-2">Next Steps</h3>
                <p className="text-sm text-gray-600">
                  {selectedReport.status === 'Completed' 
                    ? 'Treatment completed successfully. Follow-up as needed.'
                    : selectedReport.status === 'Under Review'
                    ? 'Case under review. Awaiting additional test results or specialist consultation.'
                    : 'Patient referred to specialist for advanced treatment.'}
                </p>
              </div>
              
              <div className="flex gap-2 pt-4">
                <Button 
                  onClick={() => handleDownloadReport(selectedReport)}
                  className="flex-1"
                >
                  <Download className="h-4 w-4 mr-2" />
                  Download Report
                </Button>
                <Button 
                  variant="outline" 
                  onClick={() => handleShareReport(selectedReport)}
                  className="flex-1"
                >
                  <Share className="h-4 w-4 mr-2" />
                  Share Report
                </Button>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      )}
    </div>
  );
};

export default Reports;
